# SOME DESCRIPTIVE TITLE.
# Copyright (C) This documentation is licensed under CC0 1.0.
# This file is distributed under the same license as the MusicBrainz Picard
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: MusicBrainz Picard v2.3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-11 10:20-0600\n"
"PO-Revision-Date: 2021-04-11 10:24-0600\n"
"Last-Translator: Bob Swift <bswift@rsds.ca>\n"
"Language: fr\n"
"Language-Team: \n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"X-Generator: Poedit 2.4.2\n"

#: ../../appendices/plugins_api.rst:4
msgid ""
":index:`Appendix A <pair: plugins; programming>`: :index:`Plugins API <pair: "
"plugins; api>`"
msgstr ""
":index:`Annexe A <pair: plugins; programmation>`: :index:`API des plugins "
"<pair: plugins; api>`"

#: ../../appendices/plugins_api.rst:7
msgid ":index:`Plugin Metadata <plugins; metadata>`"
msgstr ":index:`Métadonnées du plugin <plugins; métadonnées>`"

#: ../../appendices/plugins_api.rst:9
msgid ""
"Each plugin must provide some metadata as variables. Those variables should be "
"placed at the top of the file."
msgstr ""
"Chaque plugin doit fournir des métadonnées sous forme de variables. Ces "
"variables doivent être placées en haut du fichier."

#: ../../appendices/plugins_api.rst:28
msgid "Variables explanation:"
msgstr "Explication des variables:"

#: ../../appendices/plugins_api.rst:30
msgid "**PLUGIN_NAME** should be a short but descriptive name for the plugin."
msgstr "**PLUGIN_NAME** doit être un nom court mais descriptif du plugin."

#: ../../appendices/plugins_api.rst:32
msgid ""
"**PLUGIN_DESCRIPTION** should be as simple as possible, while still describing "
"the main function. If your plugin targets Picard 2.7 or later you can use "
"`Markdown <https://daringfireball.net/projects/markdown/>`_ syntax to format "
"the text.  If your plugin targets earlier versions you can instead use simple "
"HTML formatting. Please restrict the usage of HTML to basic text formatting (e."
"g. ``<strong>``, ``<em>``), links (``<a>``) and lists (``<ul>``, ``<ol>``)."
msgstr ""
"**PLUGIN_DESCRIPTION** doit être aussi simple que possible, tout en décrivant "
"la fonction principale. Si votre plugin est destiné à Picard 2.7 ou plus, vous "
"pouvez utiliser la syntaxe `Markdown <https://daringfireball.net/projects/"
"markdown/>`_ pour formater le texte.  Si votre plugin cible des versions "
"antérieures, vous pouvez à la place utiliser un simple formatage HTML. Veuillez "
"limiter l'utilisation du HTML au formatage de base du texte (par exemple, "
"``<strong>``, ``<em>``), aux liens (``<a>``) et aux listes (``<ul>``, ``<ol>``)."

#: ../../appendices/plugins_api.rst:38
msgid ""
"**PLUGIN_VERSION** should be filled with the version of Plugin. Plugin versions "
"should be in the format ``x.y.z`` (e.g.: \"1.0\" or \"2.12.4\"). It is "
"recommended that you use `Semantic Versioning <https://semver.org/>`_."
msgstr ""
"**PLUGIN_VERSION** doit être rempli avec la version de le Plug-in. Les versions "
"de plug-in doivent être au format ``x.y.z`` (par exemple: \"1.0\" ou "
"\"2.12.4\"). Il est recommandé d'utiliser `Semantic Versioning <https://semver."
"org/>`_."

#: ../../appendices/plugins_api.rst:41
msgid ""
"**PLUGIN_API_VERSIONS** should be set to the versions of Picard this plugin to "
"run with. New Picard versions will usually support older plugin API versions, "
"but on breaking changes support for older plugin versions can be dropped. "
"Versions available for Picard 2 are \"2.0\", \"2.1\" and \"2.2\"."
msgstr ""
"**PLUGIN_API_VERSIONS** doit être défini sur les versions de Picard avec "
"lesquelles s'exécuter ce plugin. Les nouvelles versions de Picard prendront "
"généralement en charge les anciennes versions de l'API de plug-in, mais en cas "
"de modification, la prise en charge des anciennes versions de plug-in peut être "
"abandonnée. Les versions disponibles pour Picard 2 sont \"2.0\", \"2.1\" et "
"\"2.2\"."

#: ../../appendices/plugins_api.rst:45
msgid ""
"**PLUGIN_LICENSE** should be set with the license name of the plugin. If "
"possible use one of the license names from the `SPDX License List <https://spdx."
"org/licenses/>`_, but you are welcomed to use another licnese if the one you "
"chose is not available in the list."
msgstr ""
"**PLUGIN_LICENSE** doit être défini avec le nom de licence du plugin. Si "
"possible, utilisez l'un des noms de licence de la `Liste des licences SPDX "
"<https://spdx.org/licenses/>`_, mais vous êtes invités à utiliser une autre "
"licence si celle que vous avez choisie n'est pas disponible dans la liste."

#: ../../appendices/plugins_api.rst:49
msgid ""
"**PLUGIN_LICENSE_URL** should be set to a URL pointing to the full license text."
msgstr ""
"**PLUGIN_LICENSE_URL** doit être défini sur une URL pointant vers le texte "
"complet de la licence."

#: ../../appendices/plugins_api.rst:53
msgid ":index:`Metadata Processors <plugins; metadata processors>`"
msgstr ":index:`Processeurs de métadonnées <plugins; processeurs de métadonnées>`"

#: ../../appendices/plugins_api.rst:55
msgid ""
"MusicBrainz metadata can be post-processed at two levels, album and track. The "
"types of the arguments passed to the processor functions in the following "
"examples are as follows:"
msgstr ""
"Les métadonnées MusicBrainz peuvent être post-traitées à deux niveaux, album et "
"piste. Les types d'arguments passés aux fonctions de processeur dans les "
"exemples suivants sont les suivants:"

#: ../../appendices/plugins_api.rst:58
msgid "**album**: ``picard.album.Album``"
msgstr "**album**: ``picard.album.Album``"

#: ../../appendices/plugins_api.rst:59
msgid "**metadata**: ``picard.metadata.Metadata``"
msgstr "**metadata**: ``picard.metadata.Metadata``"

#: ../../appendices/plugins_api.rst:60
msgid "**release**: ``dict`` with release data from MusicBrainz JSON web service"
msgstr ""
"**release**: ``dict`` avec les données de version du service Web MusicBrainz "
"JSON"

#: ../../appendices/plugins_api.rst:61
msgid "**track**: ``dict`` with track data from MusicBrainz JSON web service"
msgstr ""
"**track**: ``dict`` avec les données de piste du service Web MusicBrainz JSON"

#: ../../appendices/plugins_api.rst:65
msgid "Album metadata example:"
msgstr "Exemple de métadonnées d'album:"

#: ../../appendices/plugins_api.rst:86
msgid "Track metadata example:"
msgstr "Exemple de Suivre les métadonnées:"

#: ../../appendices/plugins_api.rst:104
msgid ":index:`Event Hooks <pair: plugins; event hooks>`"
msgstr ":index:`Crochets d'événement <pair: plugins; hooks d'événement>`"

#: ../../appendices/plugins_api.rst:106
msgid ""
"Plugins can register themselves to listen for different events. Currently the "
"following event hooks are available:"
msgstr ""
"Les plugins peuvent s'enregistrer pour écouter différents événements. "
"Actuellement, les hooks d'événement suivants sont disponibles:"

#: ../../appendices/plugins_api.rst:109
msgid "file_post_load_processor(file)"
msgstr "file_post_load_processor(file)"

#: ../../appendices/plugins_api.rst:111
msgid ""
"This hook is called after a file has been loaded into Picard. This could for "
"example be used to load additional data for a file. Usage:"
msgstr ""
"Ce hook est appelé après le chargement d'un fichier dans Picard. Cela pourrait "
"par exemple être utilisé pour charger des données supplémentaires pour un "
"fichier. Usage:"

#: ../../appendices/plugins_api.rst:125
msgid "file_post_save_processor(file)"
msgstr "file_post_save_processor(file)"

#: ../../appendices/plugins_api.rst:127
msgid ""
"This hook is called after a file has been saved. This can for example be used "
"to run additional post-processing on the file or write extra data. Note that "
"the file's metadata is already the newly saved metadata. Usage:"
msgstr ""
"Ce hook est appelé après l'enregistrement d'un fichier. Cela peut par exemple "
"être utilisé pour exécuter un post-traitement supplémentaire sur le fichier ou "
"écrire des données supplémentaires. Notez que les métadonnées du fichier sont "
"déjà les métadonnées nouvellement enregistrées. Usage:"

#: ../../appendices/plugins_api.rst:141
msgid "file_post_addition_to_track_processor(track, file)"
msgstr "file_post_addition_to_track_processor(track, file)"

#: ../../appendices/plugins_api.rst:143
msgid ""
"This hook is called after a file has been added to a track (on the right-hand "
"pane of Picard)."
msgstr ""
"Ce hook est appelé après qu'un fichier a été ajouté à une piste (dans le volet "
"de droite de Picard)."

#: ../../appendices/plugins_api.rst:156
msgid "file_post_removal_from_track_processor(track, file)"
msgstr "file_post_removal_from_track_processor(track, file)"

#: ../../appendices/plugins_api.rst:158
msgid ""
"This hook is called after a file has been removed from a track (on the right-"
"hand pane of Picard)."
msgstr ""
"Ce hook est appelé après qu'un fichier a été supprimé d'une piste (dans le "
"volet droit de Picard)."

#: ../../appendices/plugins_api.rst:171
msgid "album_post_removal_processor(album)"
msgstr "album_post_removal_processor(album)"

#: ../../appendices/plugins_api.rst:173
msgid "This hook is called after an album has been removed from Picard."
msgstr "Ce hook est appelé après qu'un album a été supprimé de Picard."

#: ../../appendices/plugins_api.rst:187
msgid "Event hooks have been available since API version 2.2."
msgstr "Les hooks d'événement sont disponibles depuis la version 2.2 de l'API."

#: ../../appendices/plugins_api.rst:191
msgid ":index:`File Formats <pair: plugins; file format>`"
msgstr ":index:`Formats de fichiers <pair: plugins; format de fichier>`"

#: ../../appendices/plugins_api.rst:193
msgid ""
"Plugins can extend Picard with support for additional file formats. See the "
"existing `file format implementations <https://github.com/metabrainz/picard/"
"tree/master/picard/formats>`_ for details on how to implement the ``_load`` and "
"``_save`` methods. Example:"
msgstr ""
"Les plugins peuvent étendre Picard avec la prise en charge de formats de "
"fichiers supplémentaires. Voir les `implémentations de format de fichier "
"existantes <https://github.com/metabrainz/picard/tree/master/picard/formats>`_ "
"pour plus de détails sur la façon d'implémenter les méthodes \"_load\" et "
"\"_save\". Exemple:"

#: ../../appendices/plugins_api.rst:231
msgid ":index:`Tagger Script Functions <pair: scripting functions; plugins>`"
msgstr ""
":index:`Fonctions de script de tagger <pair: fonctions de script; plugins>`"

#: ../../appendices/plugins_api.rst:233
msgid ""
"To define new tagger script functions use ``register_script_function(function, "
"name=None)`` from the ``picard.script`` module. ``parser`` is an instance of "
"``picard.script.ScriptParser``, and the rest of the arguments passed to it are "
"the arguments from the function call in the tagger script. Example:"
msgstr ""
"Pour définir de nouvelles fonctions de script de tagger, utilisez "
"``register_script_function (function, name = None)`` du module ``picard."
"script``. ``parser`` est une instance de ``picard.script.ScriptParser``, et le "
"reste des arguments qui lui sont passés sont les arguments de l'appel de "
"fonction dans le script du tagger. Exemple:"

#: ../../appendices/plugins_api.rst:255
msgid "``register_script_function`` supports two optional arguments:"
msgstr "``register_script_function`` prend en charge deux arguments optionnels:"

#: ../../appendices/plugins_api.rst:257
msgid ""
"**eval_args**: If this is **False**, the arguments will not be evaluated before "
"being passed to **function**."
msgstr ""
"**eval_args**: Si c'est **False**, les arguments ne seront pas évalués avant "
"d'être passés à **function**."

#: ../../appendices/plugins_api.rst:258
msgid ""
"**check_argcount**: If this is **False** the number of arguments passed to the "
"function will not be verified."
msgstr ""
"**check_argcount**: Si c'est **False**, le nombre d'arguments passés à la "
"fonction ne sera pas vérifié."

#: ../../appendices/plugins_api.rst:260
msgid "The default value for both arguments is **True**."
msgstr "La valeur par défaut des deux arguments est **True**."

#: ../../appendices/plugins_api.rst:264
msgid ":index:`Context Menu Actions <pair: plugins; context menu actions>`"
msgstr ""
":index:`Actions du menu contextuel <pair: plugins; actions du menu contextuel>`"

#: ../../appendices/plugins_api.rst:266
msgid ""
"Right-click context menu actions can be added to albums, tracks and files in "
"\"Unmatched Files\", \"Clusters\" and the \"ClusterList\" (parent folder of "
"Clusters). Example:"
msgstr ""
"Les actions du menu contextuel du clic droit peuvent être ajoutées aux albums, "
"pistes et fichiers dans \"Fichiers sans correspondance\", \"Clusters\" et "
"\"ClusterList\" (dossier parent des clusters). Exemple:"

#: ../../appendices/plugins_api.rst:295
msgid ""
"Use ``register_x_action`` where 'x' is \"*album*\", \"*track*\", \"*file*\", "
"\"*cluster*\" or \"*clusterlist*\"."
msgstr ""
"Utilisez ``register_x_action`` où 'x' est \"*album*\", \"*track*\", \"*file*\", "
"\"*cluster*\" ou \"*clusterlist*\"."

#~ msgid "Plugins API"
#~ msgstr "API des plugins"

#~ msgid "Appendix A: Plugins API"
#~ msgstr "Annexe 1: API des plugins"

#~ msgid "Plugin Metadata"
#~ msgstr "Métadonnées du plugin"

#~ msgid "Metadata Processors"
#~ msgstr "Processeurs de métadonnées"

#~ msgid "Event Hooks"
#~ msgstr "Hooks d'événement"

#~ msgid "File Formats"
#~ msgstr "Formats de fichier"

#~ msgid "Tagger Script Functions"
#~ msgstr "Fonctions de script de tagger"

#~ msgid "Context Menu Actions"
#~ msgstr "Actions du menu contextuel"

#~ msgid ""
#~ "**PLUGIN_DESCRIPTION** should be as simple as possible, while still "
#~ "describing the main function."
#~ msgstr ""
#~ "**PLUGIN_DESCRIPTION** doit être aussi simple que possible, tout en "
#~ "décrivant toujours la fonction principale."
